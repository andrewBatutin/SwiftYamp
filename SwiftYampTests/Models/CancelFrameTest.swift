//
//  CancelFrameTest.swift
//  SwiftYamp
//
//  Created by Andrey Batutin on 6/14/17.
//  Copyright Â© 2017 Andrey Batutin. All rights reserved.
//

import XCTest

class CancelFrameTest: XCTestCase {
    
    let cancelType:UInt8 = 0x12
    
    func testCancelFrameDeSerializationSuccsefullNotKill() {
        let expectedHeaderData:[UInt8] = [0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x41, 0x41, 0x41]
        let expectedUID:[UInt8] = [0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09]
        let fullData = Data([cancelType] + expectedHeaderData + expectedUID + [0x00])
        let subject = try! CancelFrame(data: fullData)
        let realData = try! subject.toData()
        XCTAssertEqual(realData, fullData)
        XCTAssertEqual(subject.type, BaseFrame(type: FrameType.Cancel))
        
        let expectedHeader = UserMessageHeaderFrame(uid: [0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], size: 4, uri: "AAAA")
        let expectedKill = false
        XCTAssertEqual(expectedHeader, subject.header)
        XCTAssertEqual(expectedUID, subject.requestUid)
        XCTAssertEqual(expectedKill, subject.kill)
    }
    
    func testCancelFrameDeSerializationSuccsefullKill() {
        let expectedHeaderData:[UInt8] = [0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x41, 0x41, 0x41]
        let expectedUID:[UInt8] = [0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09]
        let fullData = Data([cancelType] + expectedHeaderData + expectedUID + [0x01])
        let subject = try! CancelFrame(data: fullData)
        let realData = try! subject.toData()
        XCTAssertEqual(realData, fullData)
        XCTAssertEqual(subject.type, BaseFrame(type: FrameType.Cancel))
        
        let expectedHeader = UserMessageHeaderFrame(uid: [0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], size: 4, uri: "AAAA")
        let expectedKill = true
        XCTAssertEqual(expectedHeader, subject.header)
        XCTAssertEqual(expectedUID, subject.requestUid)
        XCTAssertEqual(expectedKill, subject.kill)
    }
    
    func testCancelFrameSerializationSuccesfull() {
        let expectedHeader = UserMessageHeaderFrame(uid: [0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], size: 4, uri: "AAAA")
        let expectedHeaderData:[UInt8] = [0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x41, 0x41, 0x41]
        let expectedUID:[UInt8] = [0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09]
        let expectedData = Data([cancelType] + expectedHeaderData + expectedUID + [0x01])
        let subject = CancelFrame(header: expectedHeader, requestUid: expectedUID, kill: true)
        XCTAssertEqual(expectedData, try! subject.toData())
    }
    
    func testCancelFrameDeSerializeThorwsForShortFrameWithNoIsProgressiveData(){
        let expectedHeaderData:[UInt8] = [0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x41, 0x41, 0x41]
        let expectedUID:[UInt8] = [0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09]
        let fullData = Data([cancelType] + expectedHeaderData + expectedUID)
        XCTAssertThrowsError(try CancelFrame(data: fullData))
    }
    
}
